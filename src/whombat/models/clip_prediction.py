"""Clip Prediction model.

A Clip Prediction is a clip that has been analyzed by a model or a user during
a Prediction Run. This clip can contain Sound Events Predictions, such as bird
vocalizations or engine noises, or it can have Predicted Tags associated at the
clip level, such as "car" or "rain." The annotations generated by the model in
the clip predictions can be compared to the annotations made by human
annotators in the evaluation set, allowing for the evaluation of accuracy and
performance.
"""

import sqlalchemy.orm as orm
from sqlalchemy import ForeignKey, UniqueConstraint

from whombat.models.base import Base
from whombat.models.clip import Clip
from whombat.models.prediction_run import PredictionRun

__all__ = [
    "ClipPrediction",
    "ClipPredictionTag",
    "ClipPredictionNote",
]


class ClipPrediction(Base):
    """Prediction Clip model."""

    __tablename__ = "clip_prediction"

    id: orm.Mapped[int] = orm.mapped_column(primary_key=True)
    """Unique identifier of the clip prediction."""

    clip_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("clip.id"),
        nullable=False,
    )
    """Unique identifier of the clip."""

    clip: orm.Mapped[Clip] = orm.relationship()
    """Clip to which the clip prediction belongs."""

    prediction_run_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("prediction_run.id"),
        nullable=False,
    )
    """Unique identifier of the prediction run."""

    prediction_run: orm.Mapped[PredictionRun] = orm.relationship(
        "PredictionRun",
        back_populates="clip_predictions",
        init=False,
        repr=False,
    )
    """Prediction run to which the clip prediction belongs."""

    predicted_tags: orm.Mapped[list["ClipPredictionTag"]] = orm.relationship(
        "ClipPredictionTag",
        cascade="all, delete-orphan",
        lazy="joined",
        init=False,
        repr=False,
        default_factory=list,
    )


class ClipPredictionTag(Base):
    """Clip Prediction Tag model."""

    __tablename__ = "clip_prediction_tag"

    clip_prediction_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("clip_prediction.id"),
        primary_key=True,
        nullable=False,
    )
    """Unique identifier of the clip prediction."""

    tag_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("tag.id"),
        primary_key=True,
        nullable=False,
    )
    """Unique identifier of the tag."""

    score: orm.Mapped[float] = orm.mapped_column(
        nullable=False,
        default=1.0,
    )
    """Confidence score of the predicted tag."""

    __table_args__ = (
        UniqueConstraint(
            "clip_prediction_id",
            "tag_id",
        ),
    )


class ClipPredictionNote(Base):
    """Clip prediction note model."""

    __tablename__ = "clip_prediction_note"

    clip_prediction_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("clip_prediction.id"),
        primary_key=True,
        nullable=False,
    )
    """Unique identifier of the clip prediction."""

    note_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("note.id"),
        primary_key=True,
        nullable=False,
    )
    """Unique identifier of the note."""

    __table_args__ = (
        UniqueConstraint(
            "clip_prediction_id",
            "note_id",
        ),
    )
