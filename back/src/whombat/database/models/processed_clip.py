"""Processed Clip model.

A Processed Clip is a recording clip that has been analyzed by the machine
learning model during a model run. This clip can contain predicted sound
events, such as bird vocalizations or engine noises, or it can have predicted
tags associated at the clip level, such as "car" or "rain." The annotations
generated by the model in the processed clips can be compared to the
annotations made by human annotators in the annotation project, allowing for
the evaluation of the model's accuracy and performance. The processed clips are
an important part of the machine learning workflow, as they provide the data
necessary for model evaluation and improvement.

"""

import sqlalchemy.orm as orm
from sqlalchemy import ForeignKey, UniqueConstraint

from whombat.database.models.base import Base
from whombat.database.models.clip import Clip
from whombat.database.models.model_run import ModelRun

__all__ = [
    "ProcessedClip",
    "ProcessedClipPredictedTag",
    "ProcessedClipNote",
]


class ProcessedClip(Base):
    """Processed Clip model."""

    __tablename__ = "processed_clip"

    id: orm.Mapped[int] = orm.mapped_column(primary_key=True)
    """Unique identifier of the processed clip."""

    clip_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("clip.id"),
        nullable=False,
    )
    """Unique identifier of the clip."""

    clip: orm.Mapped[Clip] = orm.relationship()
    """Clip to which the processed clip belongs."""

    model_run_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("model_run.id"),
        nullable=False,
    )
    """Unique identifier of the model run."""

    model_run: orm.Mapped[ModelRun] = orm.relationship()
    """Model run to which the processed clip belongs."""

    predicted_tags: orm.Mapped["ProcessedClipPredictedTag"] = orm.relationship(
        "ProcessedClipPredictedTag",
        cascade="all, delete-orphan",
    )


class ProcessedClipPredictedTag(Base):
    """Processed clip predicted tag model."""

    __tablename__ = "processed_clip_predicted_tag"

    processed_clip_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("processed_clip.id"),
        primary_key=True,
        nullable=False,
    )
    """Unique identifier of the processed clip."""

    tag_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("tag.id"),
        primary_key=True,
        nullable=False,
    )
    """Unique identifier of the tag."""

    probability: orm.Mapped[float] = orm.mapped_column(
        nullable=False,
        default=1.0,
    )
    """Probability of the predicted tag."""

    __table_args__ = (
        UniqueConstraint(
            "processed_clip_id",
            "tag_id",
        ),
    )


class ProcessedClipNote(Base):
    """Processed clip note model."""

    __tablename__ = "processed_clip_note"

    processed_clip_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("processed_clip.id"),
        primary_key=True,
        nullable=False,
    )
    """Unique identifier of the processed clip."""

    note_id: orm.Mapped[int] = orm.mapped_column(
        ForeignKey("note.id"),
        primary_key=True,
        nullable=False,
    )
    """Unique identifier of the note."""

    __table_args__ = (
        UniqueConstraint(
            "processed_clip_id",
            "note_id",
        ),
    )
