"""Avoid cascading deletes of annotation tasks related to a clip.

Revision ID: a8a44e0eea11
Revises: bb3d93018481
Create Date: 2025-04-01 15:04:38.122087

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a8a44e0eea11"
down_revision: Union[str, None] = "bb3d93018481"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "fk_annotation_task_clip_id_clip",
        "annotation_task",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_annotation_task_clip_id_clip"),
        "annotation_task",
        "clip",
        ["clip_id"],
        ["id"],
        ondelete="RESTRICT",
    )
    op.drop_constraint(
        "fk_clip_recording_id_recording", "clip", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_clip_recording_id_recording"),
        "clip",
        "recording",
        ["recording_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("fk_clip_recording_id_recording"), "clip", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_clip_recording_id_recording",
        "clip",
        "recording",
        ["recording_id"],
        ["id"],
    )
    op.drop_constraint(
        op.f("fk_annotation_task_clip_id_clip"),
        "annotation_task",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_annotation_task_clip_id_clip",
        "annotation_task",
        "clip",
        ["clip_id"],
        ["id"],
    )
    # ### end Alembic commands ###
